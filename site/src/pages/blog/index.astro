---
import Card from "#/components/Card.astro"
import type { BlogPost } from "#/lib/types.ts"
import H3 from "#/components/typography/h3.astro"
import { saneDateTime, toISODate } from "#/lib/utilities.ts"
import { contentfulClient } from "#/lib/contentful/client.ts"
import AnimationLayout from "../../layouts/AnimationLayout.astro"

export const prerender = false

const blogEntries = await contentfulClient.getEntries<BlogPost>({
  content_type: "blog",
  // @ts-expect-error
  order: "-fields.date",
  limit: 100 // max limit
})

const publishedBlogPosts = blogEntries.items.filter(entry =>
  import.meta.env.MODE === "production" ? entry.fields.hidden !== true : true
) as unknown as Array<BlogPost>

// The browser should always check freshness
Astro.response.headers.set("cache-control", "public, max-age=0, must-revalidate")

const imageWithProtocol = (url: string) => `https:${url}`
---

  <AnimationLayout title="Development blog" text="Stay informed">
    <div class="flex w-full justify-center py-16">
      <div class="max-w-6xl">
        <!-- <H1>The <span class="text-accent-500">latest.</span></h1> -->
        <div class="flex flex-col md:grid md:grid-cols-2 xl:grid-cols-3">
          {
            publishedBlogPosts.map((blogPostEntry: BlogPost) => (
                    <a class="pointer-cursor" href={`/blog/${blogPostEntry.fields.slug}`}>
                      <Card class="size-full border-none" padded>
                        <div class="border-2 border-neutral-800 w-full h-[14rem] rounded-tl-[4rem] overflow-hidden mb-2">
                          <img
                                  class="w-full h-full object-cover border-none"
                                  loading="eager"
                                  alt={blogPostEntry.fields.cover.fields.title}
                                  src={`${imageWithProtocol(blogPostEntry.fields.cover.fields.file.url)}?fit=fill&f=center&fm=avif&w=1344&h=706`}
                          />
                        </div>
                        <div class="flex flex-col gap-2">
                          <H3>{blogPostEntry.fields.title}</H3>
                          <div class="flex items-center justify-between text-xl font-mono font-semibold">
                            <time
                                    class="text-accent-500"
                                    datetime={toISODate(`${blogPostEntry?.fields?.date}`)}
                            >
                              {saneDateTime(`${blogPostEntry?.fields?.date}`)}
                            </time>
                            <div class="h-full w-1 bg-white" />
                            <p class="uppercase font-mono truncate">
                              <span class="hidden lg:inline-block mr-2">Author: </span>
                              {blogPostEntry.fields.author}
                            </p>
                          </div>
                          <p class="text-base text-white font-mono">{blogPostEntry.fields.description}</p>
                        </div>
                      </Card>
                    </a>
            ))
          }
        </div>
      </div>
    </div>
  </AnimationLayout>

<style is:inline>
  *::selection {
    background-color: #a0ecfd;
    color: #000;
  }
  .card-rounded {
    border-top-left-radius: 0 50%;
    overflow: hidden;
  }
</style>
