---
import MatrixCover from "../../MatrixCover.astro"
import H1 from "../../typography/h1.astro"
import TextP from "../../typography/TextP.astro"
// import { renderRichText, renderTitle } from "../../../lib/contentful/render.ts"

interface Props {
  title: string
  text: string
}

const { title, text } = Astro.props

// const titleHtml = renderTitle(title)
// const textHtml = renderRichText(text)

// Define custom animation
const slideTextAnimation = {
  forwards: {
    old: {
      name: "slideOutLeft",
      duration: "0.4s",
      easing: "ease-out",
      fillMode: "forwards"
    },
    new: {
      name: "slideInRight",
      duration: "0.4s",
      easing: "ease-out",
      fillMode: "forwards"
    }
  }
}
---

<div class="header-grid">
  <MatrixCover/>
  <div class="bg-gradient-to-r from-transparent via-black to-transparent px-4 py-6 text-center header-text-content flex justify-center">
    <div class="max-w-2xl flex flex-col gap-4" transition:animate={slideTextAnimation}>
      <H1>{title}</H1>
      <TextP>{text}</TextP>
    </div>
  </div>
</div>

<style lang="postcss" is:global>
    .header-grid {
        --outer-border: 0px;
        --inner-border: 0px;
        height: calc(100svh - 68px);
        width: 100%;
        display: grid;
        grid-template-rows: 0 var(--inner-border) 1fr auto 1fr var(--inner-border) var(--outer-border);
        grid-template-columns: var(--outer-border) var(--inner-border) 1fr auto 1fr var(--inner-border) var(--outer-border);
    }

    .header-grid > canvas {
        grid-area: 3 / 3 / 6 / 6;
        background-color: black;
    }

    .header-text-content {
        grid-area: 4 / 3 / 5 / 6;
        z-index: 1;
    }


    @keyframes slideOutLeft {
        from {
            transform: translateX(0);
            opacity: 1;
        }
        to {
            transform: translateX(-100%);
            opacity: 0;
        }
    }

    @keyframes slideInRight {
        from {
            transform: translateX(100%);
            opacity: 0;
        }
        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
</style>

<script>

  import {rotateCamera} from "../../../lib/matrix-cover";

  let previousPath = window.location.pathname;

  document.addEventListener('astro:after-swap', (e) => {
    const currentPath = window.location.pathname;

    const pageValues = {
      '/': 1,
      '/learn': 2,
      '/ecosystem': 3,
      '/team': 4
    };

    const fromPath = previousPath.replace(/\/$/, '') || '/';
    const toPath = currentPath.replace(/\/$/, '') || '/';

    console.log('From:', fromPath, 'To:', toPath);

    const fromValue = pageValues[fromPath];
    const toValue = pageValues[toPath];

    if (fromValue !== undefined && toValue !== undefined) {
      const direction = Math.abs(toValue - fromValue) > 2
        ? (toValue < fromValue ? 'left' : 'right')
        : (toValue > fromValue ? 'left' : 'right');

      rotateCamera(direction);
    }
    previousPath = currentPath;
  });

</script>
